version: "3.7"

services:
  app:
    image: &app beeracademy/web
    restart: always
    networks:
      - traefik
      - default
    volumes:
      - ./media:/app/media
      - ./.env:/app/.env
    expose:
      - 8000
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.academy-beer.rule=Host(`academy.beer`)
        - traefik.http.routers.academy-beer.tls.certResolver=le
        - traefik.http.services.academy-beer.loadbalancer.server.port=8000
    container_name: academy.beer
    depends_on:
      - db
      - media
      - celery
      - celery-beat

  celery:
    image: *app
    command: ["celery", "worker", "--app=academy", "--loglevel=INFO"]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - rabbitmq
      - db

  celery-beat:
    image: *app
    command: ["celery", "beat", "--app=academy", "--loglevel=INFO", "--scheduler=django_celery_beat.schedulers:DatabaseScheduler"]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - rabbitmq
      - db

  db:
    image: postgres:12
    volumes:
      - ./db_data:/var/lib/postgresql/data

  media:
    image: nginx:alpine
    volumes:
      - ./media:/usr/share/nginx/html
    networks:
      - traefik
    expose:
      - 80
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.media-academy-beer.rule=Host(`media.academy.beer`)
        - traefik.http.routers.media-academy-beer.tls.certResolver=le
        - traefik.http.services.media-academy-beer.loadbalancer.server.port=80
    container_name: media.academy.beer

  rabbitmq:
    image: rabbitmq

networks:
  traefik:
    external: true
