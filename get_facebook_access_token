#!/usr/bin/env python
import argparse

import requests

GRAPH_URL = "https://graph.facebook.com/v8.0"

parser = argparse.ArgumentParser()
parser.add_argument("--app-id", required=True)
parser.add_argument("--app-secret", required=True)
parser.add_argument("--page-id", required=True)
parser.add_argument("--access-token", required=True)
parser.add_argument("--test-post", action="store_true")

args = parser.parse_args()

short_lived_user_access_token = args.access_token
APP_ID = args.app_id
APP_SECRET = args.app_secret
PAGE_ID = args.page_id

print("[-] Retrieving long lived access token...")
r = requests.get(
    f"{GRAPH_URL}/oauth/access_token",
    params={
        "grant_type": "fb_exchange_token",
        "client_id": APP_ID,
        "client_secret": APP_SECRET,
        "fb_exchange_token": short_lived_user_access_token,
    },
)
r.raise_for_status()

long_lived_user_access_token = r.json()["access_token"]
print(f"[+] Success: {long_lived_user_access_token}")
print("[-] Retrieving page acess token...")
r = requests.get(
    f"{GRAPH_URL}/{PAGE_ID}",
    params={"fields": "access_token", "access_token": long_lived_user_access_token},
)
r.raise_for_status()

page_access_token = r.json()['access_token']
print(f"[+] Success: {page_access_token}")


if args.test_post:
    print("[-] Testing page access token by posting test post...")
    s = requests.Session()
    s.params['access_token'] = page_access_token
    r = s.post(f"{GRAPH_URL}/{PAGE_ID}/feed", data={"message": "test"})
    r.raise_for_status()

    post_id = r.json()["id"]
    print(f"[+] Success, id: {post_id}")

    print("[-] Deleting test post...")
    r = s.delete(f"{GRAPH_URL}/{post_id}")
    r.raise_for_status()
    print("[+] Success.")
